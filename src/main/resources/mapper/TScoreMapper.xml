<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.score.boot.dao.TScoreMapper">
    <resultMap id="BaseResultMap" type="com.score.boot.model.vo.Scorevo">
        <id property="scoreId" column="score_id" jdbcType="INTEGER"/>
        <result property="scoreValue" column="score_value" jdbcType="INTEGER"/>
        <result property="scoreType" column="score_type" jdbcType="VARCHAR"/>
        <result property="studentId" column="student_id" jdbcType="INTEGER"/>
        <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
        <result property="scoreTypeName" column="score_type_name" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="totalScoreMap" type="com.score.boot.model.vo.TotalPerformance">
        <result property="studentNo" column="student_no" jdbcType="INTEGER"/>
        <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
        <result property="exerciseGrades" column="exercise_grades" jdbcType="INTEGER"/>
        <result property="testScore" column="test_score" jdbcType="INTEGER"/>
        <result property="examinationResults" column="examination_results" jdbcType="INTEGER"/>
        <result property="totalScore" column="total_score" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        score_id, student_id, score_type, score_value
    </sql>
    <select id="selectAllScore" resultMap="BaseResultMap">
        SELECT
            CASE
                WHEN score_type = 1 THEN '习题'
                WHEN score_type = 2 THEN '测验'
                WHEN score_type = 3 THEN '考试'
                ELSE '未知'
                END AS score_type_name,
            t_student.student_name, t_score.*
        FROM t_student
                 INNER JOIN t_score on t_student.student_no=t_score.student_id;
    </select>
    <update id="updateScore" parameterType="com.score.boot.model.dto.scoredto">
        UPDATE t_score
            JOIN t_student ON t_student.student_no = t_score.student_id
        SET t_score.score_type = #{scoredto.scoreType}, t_score.score_value = #{scoredto.scoreValue}
        WHERE t_student.student_name = #{scoredto.studentName}
    </update>
    <select id="selectTotalPerformance" resultMap="totalScoreMap">
        SELECT
            s.student_no,
            s.student_name,
            SUM(CASE WHEN score_type = 1 THEN score_value ELSE 0 END) AS exercise_grades,
            SUM(CASE WHEN score_type = 2 THEN score_value ELSE 0 END) AS test_score,
            SUM(CASE WHEN score_type = 3 THEN score_value ELSE 0 END) AS examination_results,
            (SUM(CASE WHEN score_type = 1 THEN score_value ELSE 0 END) * 0.1 +
             SUM(CASE WHEN score_type = 2 THEN score_value ELSE 0 END) * 0.2 +
             SUM(CASE WHEN score_type = 3 THEN score_value ELSE 0 END) * 0.7) AS total_score
        FROM
            t_student s
                LEFT JOIN
            t_score sc ON s.student_no = sc.student_id
        GROUP BY
            s.student_no, s.student_name;
    </select>
    <select id="selectScoreByStudentName" resultMap="totalScoreMap" parameterType="string">
        SELECT
        s.student_no,
        s.student_name,
        SUM(CASE WHEN score_type = 1 THEN score_value ELSE 0 END) AS exercise_grades,
        SUM(CASE WHEN score_type = 2 THEN score_value ELSE 0 END) AS test_score,
        SUM(CASE WHEN score_type = 3 THEN score_value ELSE 0 END) AS examination_results,
        (SUM(CASE WHEN score_type = 1 THEN score_value ELSE 0 END) * 0.1 +
        SUM(CASE WHEN score_type = 2 THEN score_value ELSE 0 END) * 0.2 +
        SUM(CASE WHEN score_type = 3 THEN score_value ELSE 0 END) * 0.7) AS total_score
        FROM
        t_student s
        LEFT JOIN
        t_score sc ON s.student_no = sc.student_id
        WHERE
        s.student_name LIKE CONCAT('%', #{studentName}, '%')
        GROUP BY
        s.student_no, s.student_name;
    </select>
    <select id="selectScoreByStudent" resultMap="BaseResultMap">
        SELECT
            CASE
                WHEN score_type = 1 THEN '习题'
                WHEN score_type = 2 THEN '测验'
                WHEN score_type = 3 THEN '考试'
                ELSE '未知'
                END AS score_type_name,
            t_student.student_name, t_score.*
        FROM t_student
                 INNER JOIN t_score on t_student.student_no=t_score.student_id
        where
            t_student.student_name like concat('%',#{studentName},'%');
    </select>
</mapper>